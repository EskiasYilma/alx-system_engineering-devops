#!/usr/bin/env bash
# manages manage_my_process.
# shellcheck disable=SC2046
# Requirements:

# When passing the argument start:
# Starts manage_my_process
# Creates a file containing its PID in /var/run/my_process.pid
# Displays manage_my_process started
# When passing the argument stop:
# Stops manage_my_process
# Deletes the file /var/run/my_process.pid
# Displays manage_my_process stopped
# When passing the argument restart
# Stops manage_my_process
# Deletes the file /var/run/my_process.pid
# Starts manage_my_process
# Creates a file containing its PID in /var/run/my_process.pid
# Displays manage_my_process restarted
# Displays Usage: manage_my_process {start|stop|restart} if any other argument or no argument is passed

PID_FILE="/var/run/my_process.pid"

start() {
    if [ -f "$PID_FILE" ]; then
        echo "manage_my_process is already running"
    else
        nohup ./manage_my_process >> /dev/null 2>&1 &
        echo $! > "$PID_FILE"
        echo "manage_my_process started."
    fi
}

stop() {
    if [ ! -f "$PID_FILE" ]; then
        echo "manage_my_process is not running"
    else
        pid=$(cat "$PID_FILE")
        kill "$pid"
        rm -f "$PID_FILE"
        echo "manage_my_process stopped."
    fi
}

restart() {
    pid=$(cat "$PID_FILE")
    kill "$pid"
    rm -f "$PID_FILE"
    nohup ./manage_my_process >> /dev/null 2>&1 &
    echo $! > "$PID_FILE"

    echo "manage_my_process restarted."
}

if [ $# -eq 0 ]; then
    echo "Usage: $0 {start|stop|restart}"
    exit 1
fi

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    *)
        echo "Usage: manage_my_process {start|stop|restart}"
        exit 1
esac

exit 0
